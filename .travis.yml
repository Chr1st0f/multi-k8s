# Need superuser level
sudo: required
# Request to travis docker cli ready to go 
services:
  - docker

env:
  global:
    # Get the current SHA version of git to store in SHA variable. Global variable 
    - SHA=$(git rev-parse HEAD)
    # To not display any prompt on the gcloud CLI
    - CLOUDSDK_CORE_DISABLE_PROMPTS=1
# Create a test container into ./client context ( last field ) 
before_install:
  # Decrypt the service-account.json file 
  # - openssl aes-256-cbc -K $encrypted_0c35eebf403c_key -iv $encrypted_0c35eebf403c_iv -in service-account.json.enc -out service-account.json -d
  # Install the Google cloud SDK
  - curl https://sdk.cloud.google.com | bash > /dev/null;
  - source $HOME/google-cloud-sdk/path.bash.inc
  # Install and Update kubernetes inside travis environment
  - gcloud components update kubectl
  # Activate service account to access to google cloud ( file service-account.json has been unencrypted before )
  - gcloud auth activate-service-account --key-file ./.keys/service-account2.json
  # Select the gcloud project / compute zone  / cluster to use
  - gcloud config set project multi-k8s-243408
  - gcloud config set compute/zone s-central1-a
  - gcloud container clusters get-credentials multi-cluster
  
  # Log in to the docker Hub CLI
  - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
  - docker build -t ccazin/react-test -f ./client/Dockerfile.dev ./client

# The script has to return 0 to validate test 
script:
  - docker run ccazin/react-test npm run test -- --coverage

# deploy:
#   # Just to launch a script ( not a cloud provider )
#   provider: script
#   script: bash ./deploy.sh
#   on:
#     branch: master

 



